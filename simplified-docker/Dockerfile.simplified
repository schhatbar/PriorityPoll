FROM node:20-alpine as base

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies including development dependencies
RUN npm ci

# Copy application code
COPY . .

# Build stage
FROM base as build

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine as production

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install ALL dependencies (not just production)
# This is needed because your app is importing some dev dependencies in production
RUN npm ci

# Create a default theme.json file
RUN echo '{ "variant": "professional", "primary": "hsl(222.2 47.4% 11.2%)", "appearance": "light", "radius": 0.5 }' > ./theme.json

# Copy all source files from build stage
COPY --from=build /app/dist ./dist
COPY --from=build /app/shared ./shared
COPY --from=build /app/client ./client

# Expose the port
EXPOSE 5000

# Environment variables
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=5000

# Create an entrypoint script directly in the Dockerfile
RUN echo '#!/bin/sh\n\n\
# Show current directory and files for debugging\n\
echo "Current directory: $(pwd)"\n\
echo "Files in current directory:"\n\
ls -la\n\n\
# Run the application\n\
exec node --experimental-specifier-resolution=node dist/index.js' > /app/entrypoint.sh

RUN chmod +x /app/entrypoint.sh

# Use the entrypoint script
ENTRYPOINT ["sh", "/app/entrypoint.sh"]